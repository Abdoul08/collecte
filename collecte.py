# -*- coding: utf-8 -*-
"""Collecte.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rjSLU29acVjAx8RdwXuVVAsvjyDdgUkm

### **Partie 1 : Collecte des données**

#### **Importation des bibliothèques nécessaires**
"""

import nltk
nltk.download('stopwords')

import nltk
nltk.download('punkt')

import nltk
print(nltk.data.path)

import nltk
nltk.download('wordnet')

import requests
from bs4 import BeautifulSoup

"""#### **Extraction des liens d'appels d'offres de Malipages**"""

# URL de la page à scraper
url = "https://www.malipages.com/appels-offres/avis-dappel-doffres/"

# Obtenir le contenu HTML de la page
response = requests.get(url)
html_content = response.text

# Analyser le contenu HTML avec BeautifulSoup
soup = BeautifulSoup(html_content, "html.parser")

# Trouver toutes les balises div avec les classes "col-xl-9 col-lg-8 col-xs-12"
divs_col = soup.find_all("div", class_="col-xl-9 col-lg-8 col-xs-12")

# Récupérer les liens contenus dans ces balises div
for div in divs_col:
    # Rechercher les balises <a> dans chaque div
    links = div.find_all("a")
    # Imprimer les liens trouvés
    for link in links:
        href = link.get("href")
        if href:
            print(href)

liste = []
liste= links = [
    "https://www.malipages.com/appel-offre/realisation-detude-end-line/",
    "https://www.malipages.com/?post_type=aop&company=acf-action-contre-la-faim",
    "https://www.malipages.com/appels-offres/avis-dappel-doffres/",
    "https://www.malipages.com/appel-offre/realisation-de-blocs-de-latrines/",
    "https://www.malipages.com/?post_type=aop&company=catholic-relief-services",
    "https://www.malipages.com/appels-offres/avis-dappel-doffres/",
    "https://www.malipages.com/appel-offre/acquisition-de-logiciel-comptable-et-mise-en-place-dun-systeme-de-comptabilite/",
    "https://www.malipages.com/?post_type=aop&company=chemonics-international",
    "https://www.malipages.com/appels-offres/avis-dappel-doffres/",
    "https://www.malipages.com/appel-offre/etude-des-besoins-en-renforcement-des-capacites-de-la-fiacer/",
    "https://www.malipages.com/?post_type=aop&company=giz-bureau-de-la-cooperation-allemande-au-developpement-au-mali",
    "https://www.malipages.com/appels-offres/avis-dappel-doffres/",
    "https://www.malipages.com/appel-offre/realisation-dun-livre-blanc/",
    "https://www.malipages.com/?post_type=aop&company=giz-bureau-de-la-cooperation-allemande-au-developpement-au-mali",
    "https://www.malipages.com/appels-offres/avis-dappel-doffres/",
    "https://www.malipages.com/appel-offre/fourniture-de-quittances-et-dimprimes-securises-du-tresor/",
    "https://www.malipages.com/?post_type=aop&company=ministere-de-leconomie-et-des-finances",
    "https://www.malipages.com/appels-offres/avis-dappel-doffres/",
    "https://www.malipages.com/appel-offre/fourniture-dequipements-et-materiels-medicaux-oms/",
    "https://www.malipages.com/?post_type=aop&company=oms-organisation-mondiale-de-la-sante",
    "https://www.malipages.com/appels-offres/avis-dappel-doffres/",
    "https://www.malipages.com/appel-offre/fourniture-de-vehicules-ortm/",
    "https://www.malipages.com/?post_type=aop&company=ortm-office-de-radio-television-du-mali",
    "https://www.malipages.com/appels-offres/avis-dappel-doffres/",
    "https://www.malipages.com/appel-offre/service-de-gardiennage-ier-bamako/",
    "https://www.malipages.com/?post_type=aop&company=institut-deconomie-rurale",
    "https://www.malipages.com/appels-offres/avis-dappel-doffres/",
    "https://www.malipages.com/appel-offre/achat-a-commande-daliments-pour-les-animaux-du-zoo/",
    "https://www.malipages.com/?post_type=aop&company=ministere-de-lenvironnement",
    "https://www.malipages.com/appels-offres/avis-dappel-doffres/",
    "https://www.malipages.com/appels-offres/avis-dappel-doffres/page/1/",
    "https://www.malipages.com/appels-offres/avis-dappel-doffres/page/2/",
    "https://www.malipages.com/appels-offres/avis-dappel-doffres/page/3/",
    "https://www.malipages.com/appels-offres/avis-dappel-doffres/page/10/",
    "https://www.malipages.com/appels-offres/avis-dappel-doffres/page/11/",
    "https://www.malipages.com/appels-offres/avis-dappel-doffres/page/12/"
]

"""**Récupérer le titre et le contenu des appels d'offres**"""

# Fonction pour récupérer le titre et le contenu d'une page à partir de son URL
def get_page_info(url):
    response = requests.get(url)
    html_content = response.text
    soup = BeautifulSoup(html_content, "html.parser")
    # Extraire le titre de la page
    title = soup.title.text.strip()
    # Extraire le contenu de la balise <div> avec la classe "entry-content"
    entry_content_div = soup.find("div", class_="entry-content")
    if entry_content_div:
        content = entry_content_div.text.strip()
    else:
        content = None
    return title, content

# Récupérer les informations de chaque page liée
for link in links:
    title, content = get_page_info(link)
    print("Titre:", title)
    print("Contenu:")
    print(content)
    print("-" * 50)

"""#### **Scraper des pages web et les enregistrer en format TXT**"""

# Ouvrir le fichier en mode écriture
with open("Base.txt", "w", encoding="utf-8") as file:
    # Récupérer les informations de chaque page liée
    for link in links:
        title, content = get_page_info(link)
        file.write("Titre: " + title + "\n")
        file.write("Contenu:\n")
        if content is not None:
            file.write(content + "\n")
        else:
            file.write("Aucun contenu trouvé.\n")
        file.write("-" * 50 + "\n")